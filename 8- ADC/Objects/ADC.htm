<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ADC.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ADC.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Sep 21 17:19:55 2020
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; TFT_Print_String &rArr; TFT_Print_String8x16 &rArr; TFT_Print_Char8x16 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[6b]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DebugMon_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[1e]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC1_2_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[3b]">ADC3_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[47]">ADC4_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[21]">CAN_RX1_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[22]">CAN_SCE_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[48]">COMP1_2_3_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[49]">COMP4_5_6_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[4a]">COMP7_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[17]">DMA1_Channel1_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[18]">DMA1_Channel2_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[19]">DMA1_Channel3_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel4_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel5_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel6_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel7_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[46]">DMA2_Channel5_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[34]">EXTI15_10_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[14]">EXTI2_TSC_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[23]">EXTI9_5_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[10]">FLASH_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[3c]">FMC_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[54]">FPU_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[2e]">I2C2_ER_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[2d]">I2C2_EV_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[4c]">I2C3_ER_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[4b]">I2C3_EV_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[d]">PVD_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[11]">RCC_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[35]">RTC_Alarm_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[f]">RTC_WKUP_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[2f]">SPI1_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[30]">SPI2_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[55]">SPI4_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from stk_program.o(i.SysTick_Handler) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[56]">SystemInit</a> from system_stm32f3xx.o(i.SystemInit) referenced from startup_stm32f303xe.o(.text)
 <LI><a href="#[e]">TAMP_STAMP_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[24]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[27]">TIM1_CC_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[26]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[25]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[50]">TIM20_BRK_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[53]">TIM20_CC_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[52]">TIM20_TRG_COM_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[51]">TIM20_UP_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[28]">TIM2_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[29]">TIM3_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[2a]">TIM4_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[37]">TIM8_BRK_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[3a]">TIM8_CC_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[39]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[38]">TIM8_UP_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[31]">USART1_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[32]">USART2_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[33]">USART3_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[36]">USBWakeUp_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[4f]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[1f]">USB_HP_CAN_TX_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[4d]">USB_HP_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[20]">USB_LP_CAN_RX0_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[4e]">USB_LP_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[c]">WWDG_IRQHandler</a> from startup_stm32f303xe.o(.text) referenced from startup_stm32f303xe.o(RESET)
 <LI><a href="#[58]">__main</a> from __main.o(!!!main) referenced from startup_stm32f303xe.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[58]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[59]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[5b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[95]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[96]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[97]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[62]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[5d]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[98]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[99]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a6]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a7]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a8]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a9]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[aa]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ab]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[67]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[ac]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[ad]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[ae]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[af]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[b0]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[b1]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[b2]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[5a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[b3]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[5f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[61]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[b4]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[63]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; TFT_Print_String &rArr; TFT_Print_String8x16 &rArr; TFT_Print_Char8x16 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[6c]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[66]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b6]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[68]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>COMP4_5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>COMP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM20_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM20_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM20_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM20_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f303xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f303xe.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b7]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[65]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ba]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[bb]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[bc]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>ADC_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, adc_program.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>ADC_Read</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, adc_program.o(i.ADC_Read))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>GPIO_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, gpio_program.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init &rArr; GPIO_set_alt_function
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_set_alt_function
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_configure_pin_speed
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_configure_pin_pupd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_configure_pin_otype
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_configure_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_OUTPUT
</UL>

<P><STRONG><a name="[6e]"></a>GPIO_configure_pin_mode</STRONG> (Thumb, 232 bytes, Stack size 12 bytes, gpio_program.o(i.GPIO_configure_pin_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_configure_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[70]"></a>GPIO_configure_pin_otype</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gpio_program.o(i.GPIO_configure_pin_otype))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_configure_pin_otype
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[71]"></a>GPIO_configure_pin_pupd</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, gpio_program.o(i.GPIO_configure_pin_pupd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_configure_pin_pupd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[6f]"></a>GPIO_configure_pin_speed</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, gpio_program.o(i.GPIO_configure_pin_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_configure_pin_speed
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[72]"></a>GPIO_set_alt_function</STRONG> (Thumb, 394 bytes, Stack size 12 bytes, gpio_program.o(i.GPIO_set_alt_function))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_set_alt_function
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[87]"></a>GPIO_write_to_pin</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, gpio_program.o(i.GPIO_write_to_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_write_to_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Word
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Byte
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Byte
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Reset
</UL>

<P><STRONG><a name="[73]"></a>PIN_OUTPUT</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, tft_prog.o(i.PIN_OUTPUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PIN_OUTPUT &rArr; GPIO_Init &rArr; GPIO_set_alt_function
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_GPIO_Init
</UL>

<P><STRONG><a name="[8f]"></a>RCC_voidEnableClock</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rcc_program.o(i.RCC_voidEnableClock))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>RCC_voidInitSysClock</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, rcc_program.o(i.RCC_voidInitSysClock))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>STK_uint32_t_millis</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stk_program.o(i.STK_uint32_t_millis))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STK_voidDelayMs
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>STK_voidDelayMs</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, stk_program.o(i.STK_voidDelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STK_voidDelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STK_uint32_t_millis
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>STK_voidInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stk_program.o(i.STK_voidInit))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stk_program.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SystemInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, system_stm32f3xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f303xe.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>TFT_GPIO_Init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, tft_prog.o(i.TFT_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TFT_GPIO_Init &rArr; PIN_OUTPUT &rArr; GPIO_Init &rArr; GPIO_set_alt_function
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_OUTPUT
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[77]"></a>TFT_Init</STRONG> (Thumb, 318 bytes, Stack size 8 bytes, tft_prog.o(i.TFT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TFT_Init &rArr; TFT_GPIO_Init &rArr; PIN_OUTPUT &rArr; GPIO_Init &rArr; GPIO_set_alt_function
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Byte
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Byte
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Reset
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_GPIO_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Set_Rotation
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>TFT_Print_Char14x24</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, tft_prog.o(i.TFT_Print_Char14x24))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TFT_Print_Char14x24 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawPixel
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Word
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetAddrWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String14x24
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Number
</UL>

<P><STRONG><a name="[80]"></a>TFT_Print_Char18x32</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, tft_prog.o(i.TFT_Print_Char18x32))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TFT_Print_Char18x32 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawPixel
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Word
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetAddrWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String18x32
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Number
</UL>

<P><STRONG><a name="[81]"></a>TFT_Print_Char8x16</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, tft_prog.o(i.TFT_Print_Char8x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TFT_Print_Char8x16 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawPixel
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Word
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetAddrWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String8x16
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Number
</UL>

<P><STRONG><a name="[82]"></a>TFT_Print_Number</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, tft_prog.o(i.TFT_Print_Number))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TFT_Print_Number &rArr; TFT_Print_Char8x16 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char8x16
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char18x32
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char14x24
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>TFT_Print_String</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tft_prog.o(i.TFT_Print_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TFT_Print_String &rArr; TFT_Print_String8x16 &rArr; TFT_Print_Char8x16 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String8x16
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String18x32
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String14x24
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>TFT_Print_String14x24</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, tft_prog.o(i.TFT_Print_String14x24))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TFT_Print_String14x24 &rArr; TFT_Print_Char14x24 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char14x24
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String
</UL>

<P><STRONG><a name="[86]"></a>TFT_Print_String18x32</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, tft_prog.o(i.TFT_Print_String18x32))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TFT_Print_String18x32 &rArr; TFT_Print_Char18x32 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char18x32
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String
</UL>

<P><STRONG><a name="[84]"></a>TFT_Print_String8x16</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, tft_prog.o(i.TFT_Print_String8x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TFT_Print_String8x16 &rArr; TFT_Print_Char8x16 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char8x16
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String
</UL>

<P><STRONG><a name="[78]"></a>TFT_Reset</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, tft_prog.o(i.TFT_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TFT_Reset &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_write_to_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[7d]"></a>TFT_SetAddrWindow</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, tft_prog.o(i.TFT_SetAddrWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TFT_SetAddrWindow &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Param4
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char8x16
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char18x32
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char14x24
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_fillRect
</UL>

<P><STRONG><a name="[92]"></a>TFT_SetCursor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tft_prog.o(i.TFT_SetCursor))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>TFT_SetTextColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tft_prog.o(i.TFT_SetTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>TFT_SetTextSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tft_prog.o(i.TFT_SetTextSize))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>TFT_Set_Rotation</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, tft_prog.o(i.TFT_Set_Rotation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TFT_Set_Rotation &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Byte
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>TFT_Write_Cmd_Byte</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, tft_prog.o(i.TFT_Write_Cmd_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TFT_Write_Cmd_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_write_to_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_ParamN
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Data
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_fillRect
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Set_Rotation
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[89]"></a>TFT_Write_Cmd_Data</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, tft_prog.o(i.TFT_Write_Cmd_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TFT_Write_Cmd_Data &rArr; TFT_Write_Data_Word &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Word
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawPixel
</UL>

<P><STRONG><a name="[88]"></a>TFT_Write_Cmd_Param4</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, tft_prog.o(i.TFT_Write_Cmd_Param4))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_ParamN
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawPixel
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetAddrWindow
</UL>

<P><STRONG><a name="[8a]"></a>TFT_Write_Cmd_ParamN</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, tft_prog.o(i.TFT_Write_Cmd_ParamN))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Byte
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Param4
</UL>

<P><STRONG><a name="[7a]"></a>TFT_Write_Data_Byte</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, tft_prog.o(i.TFT_Write_Data_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_write_to_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_ParamN
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Set_Rotation
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[7e]"></a>TFT_Write_Data_Word</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, tft_prog.o(i.TFT_Write_Data_Word))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TFT_Write_Data_Word &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_write_to_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Data
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char8x16
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char18x32
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char14x24
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_fillRect
</UL>

<P><STRONG><a name="[8b]"></a>TFT_fillRect</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, tft_prog.o(i.TFT_fillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TFT_fillRect &rArr; TFT_SetAddrWindow &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Data_Word
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetAddrWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_fillScreen
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>TFT_fillScreen</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tft_prog.o(i.TFT_fillScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TFT_fillScreen &rArr; TFT_fillRect &rArr; TFT_SetAddrWindow &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_fillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>drawPixel</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, tft_prog.o(i.drawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Param4
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Write_Cmd_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char8x16
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char18x32
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Char14x24
</UL>

<P><STRONG><a name="[64]"></a>main</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; TFT_Print_String &rArr; TFT_Print_String8x16 &rArr; TFT_Print_Char8x16 &rArr; drawPixel &rArr; TFT_Write_Cmd_Param4 &rArr; TFT_Write_Cmd_ParamN &rArr; TFT_Write_Data_Byte &rArr; GPIO_write_to_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_fillScreen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_fillRect
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Set_Rotation
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetTextSize
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetTextColor
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetCursor
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_String
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Print_Number
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STK_voidInit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STK_voidDelayMs
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STK_uint32_t_millis
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_voidInitSysClock
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_voidEnableClock
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Read
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[5e]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[bf]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[c0]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
